From 4f5121ef6e0ba15427cd9c31c14618c3fb9258b6 Mon Sep 17 00:00:00 2001
From: Miao Wang <shankerwangmiao@gmail.com>
Date: Sat, 15 Apr 2023 00:38:40 +0800
Subject: [PATCH 2/2] add backward compatibility

---
 hinic/hinic_ethtool.c | 37 +++++++++++++++++++++++++++++++++++++
 hinic/hinic_lld.c     |  5 +++++
 hinic/hinic_main.c    |  5 +++++
 3 files changed, 47 insertions(+)

diff --git a/hinic/hinic_ethtool.c b/hinic/hinic_ethtool.c
index 26d6956..e39ebfd 100644
--- a/hinic/hinic_ethtool.c
+++ b/hinic/hinic_ethtool.c
@@ -904,10 +904,24 @@ static int hinic_nway_reset(struct net_device *netdev)
 	return 0;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 17, 0)
+# define HAVE_EXTENDED_RINGPARAM
+#elif defined(OPENEULER_VERSION_CODE) /* LINUX_VERSION_CODE > 5.17 */
+# if OPENEULER_VERSION_CODE >= OPENEULER_VERSION(2203, 0)
+#  define HAVE_EXTENDED_RINGPARAM
+# endif /* OPENEULER_VERSION_CODE >= 2203.0 */
+#endif
+
+#ifdef HAVE_EXTENDED_RINGPARAM
 static void hinic_get_ringparam(struct net_device *netdev,
 				struct ethtool_ringparam *ring,
 				struct kernel_ethtool_ringparam *kernel_ring,
 				struct netlink_ext_ack *extack)
+#else
+static void hinic_get_ringparam(struct net_device *netdev,
+				struct ethtool_ringparam *ring)
+#endif /* defined(HAVE_EXTENDED_RINGPARAM) */
+
 {
 	struct hinic_nic_dev *nic_dev = netdev_priv(netdev);
 
@@ -932,10 +946,15 @@ static void hinic_update_qp_depth(struct hinic_nic_dev *nic_dev,
 	}
 }
 
+#ifdef HAVE_EXTENDED_RINGPARAM
 static int hinic_set_ringparam(struct net_device *netdev,
 			       struct ethtool_ringparam *ring,
 			       struct kernel_ethtool_ringparam *kernel_ring,
 			       struct netlink_ext_ack *extack)
+#else
+static int hinic_set_ringparam(struct net_device *netdev,
+			       struct ethtool_ringparam *ring)
+#endif /* defined(HAVE_EXTENDED_RINGPARAM) */
 {
 	struct hinic_nic_dev *nic_dev = netdev_priv(netdev);
 	u16 new_sq_depth, new_rq_depth;
@@ -1473,18 +1492,36 @@ static int __hinic_set_coalesce(struct net_device *netdev,
 	return 0;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 14, 0)
+# define HAVE_EXTENDED_COALESCE
+#elif defined(OPENEULER_VERSION_CODE) /* LINUX_VERSION_CODE > 5.14 */
+# if OPENEULER_VERSION_CODE >= OPENEULER_VERSION(2203, 0)
+#  define HAVE_EXTENDED_COALESCE
+# endif /* OPENEULER_VERSION_CODE >= 2203.0 */
+#endif
+
+#ifdef HAVE_EXTENDED_COALESCE
 static int hinic_get_coalesce(struct net_device *netdev,
 			      struct ethtool_coalesce *coal,
 			      struct kernel_ethtool_coalesce *kernel_coal,
 			      struct netlink_ext_ack *extack)
+#else
+static int hinic_get_coalesce(struct net_device *netdev,
+			      struct ethtool_coalesce *coal)
+#endif /* defined(HAVE_EXTENDED_COALESCE) */
 {
 	return __hinic_get_coalesce(netdev, coal, COALESCE_ALL_QUEUE);
 }
 
+#ifdef HAVE_EXTENDED_COALESCE
 static int hinic_set_coalesce(struct net_device *netdev,
 			      struct ethtool_coalesce *coal,
 			      struct kernel_ethtool_coalesce *kernel_coal,
 			      struct netlink_ext_ack *extack)
+#else
+static int hinic_set_coalesce(struct net_device *netdev,
+			      struct ethtool_coalesce *coal)
+#endif /* defined(HAVE_EXTENDED_COALESCE) */
 {
 	return __hinic_set_coalesce(netdev, coal, COALESCE_ALL_QUEUE);
 }
diff --git a/hinic/hinic_lld.c b/hinic/hinic_lld.c
index fbed076..51b8ef1 100644
--- a/hinic/hinic_lld.c
+++ b/hinic/hinic_lld.c
@@ -1966,8 +1966,13 @@ static int mapping_bar(struct pci_dev *pdev, struct hinic_pcidev *pci_adapter)
 
 #if defined(__aarch64__)
 	/* arm do not support call ioremap_wc() */
+# if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
+	pci_adapter->dwqe_mapping = ioremap_prot(dwqe_addr, db_dwqe_size,
+						 PROT_DEVICE_nGnRnE);
+# else
 	pci_adapter->dwqe_mapping = __ioremap(dwqe_addr, db_dwqe_size,
 					      __pgprot(PROT_DEVICE_nGnRnE));
+# endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0) */
 #else
 	pci_adapter->dwqe_mapping = io_mapping_create_wc(dwqe_addr,
 							 db_dwqe_size);
diff --git a/hinic/hinic_main.c b/hinic/hinic_main.c
index 192bf52..5b00009 100644
--- a/hinic/hinic_main.c
+++ b/hinic/hinic_main.c
@@ -482,8 +482,13 @@ static void qp_add_napi(struct hinic_irq *irq_cfg)
 {
 	struct hinic_nic_dev *nic_dev = netdev_priv(irq_cfg->netdev);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+	netif_napi_add_weight(nic_dev->netdev, &irq_cfg->napi,
+			      hinic_poll, nic_dev->poll_weight);
+#else
 	netif_napi_add(nic_dev->netdev, &irq_cfg->napi,
 		       hinic_poll, nic_dev->poll_weight);
+#endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) */
 	napi_enable(&irq_cfg->napi);
 }
 
-- 
2.39.0

