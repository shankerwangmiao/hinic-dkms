From cb93fa5f8ca8302915bd24f466c34df817a0d639 Mon Sep 17 00:00:00 2001
From: Miao Wang <shankerwangmiao@gmail.com>
Date: Thu, 10 Jul 2025 20:31:16 +0800
Subject: [PATCH] add compat for missing struct rxfh

---
 hinic/Makefile                   | 18 ++++++++++++
 hinic/feature_test_struct_rxfh.c |  3 ++
 hinic/hinic_ethtool.c            | 50 ++++++++++++++++++++++++++++++++
 3 files changed, 71 insertions(+)
 create mode 100644 hinic/feature_test_struct_rxfh.c

diff --git a/hinic/Makefile b/hinic/Makefile
index 7a1e203..ea5e562 100644
--- a/hinic/Makefile
+++ b/hinic/Makefile
@@ -10,3 +10,21 @@ hinic-y := hinic_nic_cfg.o hinic_nic_io.o hinic_nic_dbg.o \
            hinic_qp.o hinic_rx.o hinic_tx.o hinic_dbgtool_knl.o \
            hinic_nictool.o hinic_sriov.o hinic_dcb.o\
            hinic_ethtool.o
+
+$(obj)/hinic_ethtool.o: $(obj)/feature_test.h
+
+$(obj)/feature_test.h: $(obj)/feature_test_struct_rxfh.c
+	echo "/* This file is automatically generated. Do not edit. */" > $@
+	for i in $^; do \
+		basename=$$(basename -- $$i .c); \
+		echo "Checking feature test for $$basename..."; \
+		if $(MAKE) "$$basename.o"; then \
+			echo "$$basename: yes"; \
+			echo "#define HAVE_$$(echo "$$basename" | sed 's/feature_test_//; s/.*/\U&/')" >> $@; \
+		else \
+			echo "$$basename: no"; \
+			echo "/* #undef HAVE_$$(echo "$$basename" | sed 's/feature_test_//; s/.*/\U&/') */" >> $@; \
+		fi; \
+		echo "" >> $@; \
+		rm -f "$$basename.o"; \
+	done
diff --git a/hinic/feature_test_struct_rxfh.c b/hinic/feature_test_struct_rxfh.c
new file mode 100644
index 0000000..98df85b
--- /dev/null
+++ b/hinic/feature_test_struct_rxfh.c
@@ -0,0 +1,3 @@
+#include <linux/ethtool.h>
+
+struct ethtool_rxfh_param test = {};
diff --git a/hinic/hinic_ethtool.c b/hinic/hinic_ethtool.c
index 0a2900f..0be0325 100644
--- a/hinic/hinic_ethtool.c
+++ b/hinic/hinic_ethtool.c
@@ -38,11 +38,26 @@
 #include "hinic_qp.h"
 #include "hinic_nictool.h"
 
+#include "feature_test.h"
+
 #ifndef SET_ETHTOOL_OPS
 #define SET_ETHTOOL_OPS(netdev, ops) \
 	((netdev)->ethtool_ops = (ops))
 #endif
 
+#ifndef HAVE_STRUCT_RXFH
+struct ethtool_rxfh_param {
+	u8	hfunc;
+	u32	indir_size;
+	u32	*indir;
+	u32	key_size;
+	u8	*key;
+	u32	rss_context;
+	u8	rss_delete;
+	u8	input_xfrm;
+};
+#endif
+
 struct hinic_stats {
 	char name[ETH_GSTRING_LEN];
 	u32 size;
@@ -2373,6 +2388,31 @@ static int hinic_set_rxfh(struct net_device *netdev,
 	return err;
 }
 
+#ifndef HAVE_STRUCT_RXFH
+static int hinic_get_rxfh_compat(struct net_device *netdev,
+				 u32 *indir, u8 *key, u8 *hfunc)
+{
+	struct ethtool_rxfh_param rxfh = {};
+	rxfh.indir = indir;
+	rxfh.key = key;
+
+	int rc = hinic_get_rxfh(netdev, &rxfh);
+	if (hfunc)
+		*hfunc = rxfh.hfunc;
+	return rc;
+}
+
+static int hinic_set_rxfh_compat(struct net_device *netdev, const u32 *indir,
+				 const u8 *key, const u8 hfunc)
+{
+	struct ethtool_rxfh_param rxfh = {};
+	rxfh.indir = (u32 *)indir;
+	rxfh.key = (u8 *)key;
+	rxfh.hfunc = hfunc;
+	return hinic_set_rxfh(netdev, &rxfh, NULL);
+}
+#endif
+
 static const struct ethtool_ops hinic_ethtool_ops = {
 	.supported_coalesce_params = ETHTOOL_COALESCE_USECS |
 				     ETHTOOL_COALESCE_PKT_RATE_RX_USECS,
@@ -2404,8 +2444,13 @@ static const struct ethtool_ops hinic_ethtool_ops = {
 	.get_module_eeprom = hinic_get_module_eeprom,
 	.get_rxfh_indir_size = hinic_get_rxfh_indir_size,
 	.get_rxfh_key_size = hinic_get_rxfh_key_size,
+#ifdef HAVE_STRUCT_RXFH
 	.get_rxfh = hinic_get_rxfh,
 	.set_rxfh = hinic_set_rxfh,
+#else
+	.get_rxfh = hinic_get_rxfh_compat,
+	.set_rxfh = hinic_set_rxfh_compat,
+#endif
 };
 
 static const struct ethtool_ops hinicvf_ethtool_ops = {
@@ -2435,8 +2480,13 @@ static const struct ethtool_ops hinicvf_ethtool_ops = {
 	.set_channels = hinic_set_channels,
 	.get_rxfh_indir_size = hinic_get_rxfh_indir_size,
 	.get_rxfh_key_size = hinic_get_rxfh_key_size,
+#ifdef HAVE_STRUCT_RXFH
 	.get_rxfh = hinic_get_rxfh,
 	.set_rxfh = hinic_set_rxfh,
+#else
+	.get_rxfh = hinic_get_rxfh_compat,
+	.set_rxfh = hinic_set_rxfh_compat,
+#endif
 };
 
 void hinic_set_ethtool_ops(struct net_device *netdev)
-- 
2.49.0

